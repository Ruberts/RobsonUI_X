local T, C, L, G = unpack(Tukui)if(C["unitframes"].enable ~= true) then return end---------------------------------------------------------------- local Variables--------------------------------------------------------------local self = TukuiFocusTargetself:Size(200, 26)self.shadow:Kill()self:SetBackdrop(nil)self:SetBackdropColor(0, 0, 0)if(C["unitframes"].focustarget ~= true) then	self:Kill()else	--------------------------------------------------------------	-- Health	--------------------------------------------------------------		self.Health:SetHeight(26)	self.Health:SetFrameLevel(5)	self.Health:CreateBorder(false, true)	self.Health.bg:SetVertexColor(0.5, 0.5, 0.5)	if(C["unitframes"].unicolor == true) then		self.Health.colorClass = false		self.Health:SetStatusBarColor(unpack(C["media"].unitframecolor))		self.Health.bg:SetVertexColor(unpack(C["media"].backdropcolor))	else		self.Health.colorClass = true	end	self.Name:SetFont(T.CreateFontString())	self.Name:SetShadowOffset(0, 0)	self.Health.value = T.SetFontString(self.Health,T.CreateFontString())	self.Health.value:Point("LEFT", self.Health, "LEFT", 4, 1)	self.Health.PostUpdate = T.PostUpdateHealth	----------------------------------------------------------------	-- Power	----------------------------------------------------------------			self.Power:Kill()	self.Power.value:Kill()	----------------------------------------------------------------	-- Castbar	----------------------------------------------------------------	self.Castbar:Kill()	----------------------------------------------------------------	-- Auras	----------------------------------------------------------------	if(self.Debuffs or self.Buffs) then		for _, frames in pairs({self.Debuffs, self.Buffs}) do			if(not frames) then return end			frames:Size(200, 26)			frames.size = 26			frames.num = 4									hooksecurefunc(frames, "PostCreateIcon", T.SkinAura)		end	endend